name: deploy_gin

permissions:
  id-token: write
  contents: read

on:
  push:
    branches:
      - main
    paths:
      - 'src/gin/**'

jobs:
  deploy:
    concurrency:
      group: ${{ github.workflow }}

    runs-on: ubuntu-latest

    environment: ${{ github.ref == 'main' && 'stg' || 'stg' }}

    defaults:
      run:
        working-directory: src/gin

    steps:
      - uses: actions/checkout@v4

      - name: Set env
        env:
          TZ: 'Asia/Tokyo'
        run: |
          echo "ARTIFACT_NAME=artifact-$(date +'%Y-%m-%d_%H-%M-%S')-${{ github.sha }}.zip" >> $GITHUB_ENV

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version-file: src/gin/go.mod
          cache-dependency-path: "src/gin/go.sum" 

      #- name: download modules
      #  if: ${{ steps.go.outputs.cache-hit != 'true' }}
      #  run: go mod download

      - name: build
        run: go build -o app
        env:
          CGO_ENABLED: 0
          GOOS: linux
          GOARCH: amd64
      
      - name: zip artifact
        run: >
          zip -r
          ${{ env.ARTIFACT_NAME }}
          app appspec.yml codedeploy

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ASSUME_ROLE_ARN }}
          aws-region: ap-northeast-1
      
      - name: Upload to S3
        run: >
          aws s3 cp
          ${{ env.ARTIFACT_NAME }}
          s3://${{ secrets.GIN_ARTIFACT_BUCKET }}
      
      - name: Deploy
        run: >
          aws deploy create-deployment
          --application-name gin_server
          --deployment-group-name gin_server_deployment_group
          --s3-location bucket=${{ secrets.GIN_ARTIFACT_BUCKET }},bundleType=zip,key=${{ env.ARTIFACT_NAME }}
  